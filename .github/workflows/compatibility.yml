name: Compatibility Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly on Saturdays at 3 AM UTC
    - cron: "0 3 * * 6"

jobs:
  go-compatibility:
    name: Go ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ["1.22", "oldstable", "stable"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: go test -v ./...

      - name: Run tests with race detector
        run: go test -race -short ./...

  vulnerability-check:
    name: Check for vulnerabilities
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Check for vulnerabilities
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

  module-check:
    name: Module Check
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Check go.mod is tidy
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum

      - name: Run project tests
        run: go test -v ./...
